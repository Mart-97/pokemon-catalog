{"version":3,"sources":["styles/pokemonCard.module.css","styles/pokemonInfo.module.css","services/pokemons.js","components/pokemonInfo.js","components/pokemonCard.js","components/pokemonList.js","components/pokemonFilter.js","index.js"],"names":["module","exports","BASE_URL","fetchPokemons","a","fetch","response","json","data","fetchFilters","PokemonInfo","props","className","styles","information","this","height","weight","React","Component","PokemonCard","state","isLoaded","name","imageFront","imageBack","isHovered","error","then","res","result","setState","sprites","front_default","back_default","e","visible","url","onMouseEnter","setImage","onMouseLeave","alt","src","p","PokemonList","useState","pokemons","setPokemons","setPreviousRequest","setNextRequest","useEffect","console","log","results","prev","next","getPokemons","length","map","item","key","PokemonFilter","filters","setFilters","getFilters","value","ability","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.dad39b3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonContainer\":\"pokemonCard_pokemonContainer__3-Kg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"information\":\"pokemonInfo_information__2MDx-\",\"fadeIn\":\"pokemonInfo_fadeIn__2FKBr\"};","const BASE_URL = 'https://pokeapi.co/api/v2';\n\nexport const fetchPokemons = async () => {\n    const response = await fetch(`${BASE_URL}/pokemon/`);\n    const data = await response.json();\n    return data;\n}\n\nexport const fetchFilters = async () => {\n    const response = await fetch(`${BASE_URL}`);\n    const data = await response.json();\n    return data;\n}\n\nexport const fetchNextPokemons = async (url) => {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n}\n\nexport const fetchPokemon = async (id) => {\n    const response = await fetch(`${BASE_URL}/pokemon/${id}`);\n    const data = await response.json();\n    return data;\n}","import React from 'react';\nimport styles from '../styles/pokemonInfo.module.css';\n\nclass PokemonInfo extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render() {\n        return(\n            <div className={styles.information}>\n                <div>Altura: {this.props.height}</div>\n                <div>Peso: {this.props.weight}</div>\n            </div>\n        );\n    }\n};\n\nexport default PokemonInfo;","import React from 'react';\nimport styles from '../styles/pokemonCard.module.css';\nimport PokemonInfo from './pokemonInfo';\n\nclass PokemonCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          isLoaded:false,\n          name:'',\n          height:'',\n          weight:'',\n          imageFront:'',\n          imageBack: '',\n          isHovered: false,\n          error: null\n        };\n    }\n    componentDidMount(){\n        fetch(\"https://pokeapi.co/api/v2/pokemon/\"+this.props.name)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              imageFront: result.sprites.front_default,\n              imageBack: result.sprites.back_default,\n              height: result.height,\n              weight: result.weight\n            });\n            \n          },\n          (error) => {\n            this.setState({\n              error: error\n            });\n          }\n        )      \n    }\n    setImage (e,visible){\n      this.setState({isHovered: visible });\n    }\n    render() {\n        let url = (!this.state.isHovered ? this.state.imageFront : this.state.imageBack);\n        \n            return (\n              <div className=\"card col-sm-3\" onMouseEnter={(e) => this.setImage(e,true)} onMouseLeave={(e) => this.setImage(e,false)} >\n                <img className=\"card-img-top\" alt={this.props.name} src={url}></img>  \n                <div className=\"card-body\" >\n                  <p styles={styles.p}>{this.props.name}</p>\n                  \n                </div>\n                  \n                  \n                \n                  \n                  { \n                  this.state.isHovered && \n                  <PokemonInfo height={this.state.height} weight={this.state.weight}/>\n                  }\n              </div>\n            );\n        \n\n    }\n};\n\nexport default PokemonCard;","\nimport React, { useState, useEffect } from 'react';\nimport {fetchPokemons} from '../services/pokemons.js';\nimport PokemonCard from './pokemonCard';\nimport styled from 'styled-components'\nconst PokemonList = () => {\n\tconst [pokemons,setPokemons] = useState([]);\n\tconst [previousRequest,setPreviousRequest] = useState(null);\n\tconst [nextRequest,setNextRequest] = useState(null);\n\tuseEffect(() => {\n\t\tasync function getPokemons(){\n\t\t\tconst response = await fetchPokemons();\n\t\t\tconsole.log(response);\n\t\t\tsetPokemons(response.results);\n\t\t\tsetPreviousRequest(response.prev);\n\t\t\tsetNextRequest(response.next);\n\t\t}\n\t\tgetPokemons();\n\t},[]);\n\tif(pokemons.length){\n\t\tconsole.log(pokemons.length)\n\t\treturn (\n\t\t\t<div className=\"col-md-12\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{pokemons.map(item => (\n\t\t\t\t\t\t<PokemonCard  key={item.name} name={item.name}></PokemonCard>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}else{\n\t\treturn <img alt=\"Cargando\"   src=\"./loading.gif\"></img>;\n\t}\n\n}\nexport default PokemonList;","import React, { useState, useEffect } from 'react';\nimport {fetchFilters} from '../services/pokemons';\nimport PokemonList from './pokemonList';\n\n\nconst PokemonFilter = () => {\n  const [filters,setFilters] = useState({});\n  useEffect(() => {\n\t\tasync function getFilters(){\n\t\t\tconst response = await fetchFilters();\n\t\t\tconsole.log(response);\n\t\t\tsetFilters(response);\n\t\t}\n\t\tgetFilters();\n  },[]);\n\n  return(\n      <div className=\"card position-fixed\">\n        <div className=\"card-header\">\n          Filter your listed pokemons\n        </div>\n        <div className=\"card-body\">\n          <select>\n            <option value=\"-1\">Choose a category</option>\n            <option value={filters.ability}>Ability</option>\n          </select>\n        </div>\n        \n      </div>\n  );\n\n}\n\nexport default PokemonFilter;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PokemonList from './components/pokemonList';\nimport PokemonFilter from './components/pokemonFilter';\n/*\nConsuma los servicios del pokemon API\nHaga un catalogo del listado de pokemons\nContenga filtros de tipos de pokemon\nQue puedas ver los detalles de un pokemon\n*/\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm-4\">\n\t\t\t\t<PokemonFilter />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm-8\">\n\t\t\t\t\t<PokemonList/>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t\n\t);\n  }\n\nReactDOM.render(<App/>,document.querySelector(\"#root\"));"],"sourceRoot":""}